{"version":3,"sources":["pages/Foods.js","pages/FoodLogs.js","pages/Menu.js","pages/ReactionLogs.js","pages/Report.js","App.js","reportWebVitals.js","index.js"],"names":["Foods","state","food","foodLog","displayFoods","displayLogs","displayLogByDateToggle","displayLogByFoodToggle","displayLogByReactionToggle","displayRenderAnalysisToggle","date","meal","foodsSelected","reaction","dateFilter","reactionFilter","foodFilter","logs","reactions","handleSubmit","e","preventDefault","console","log","setState","input","handleChange","target","name","value","displayFoodsToggle","prevState","foodLogToggle","displayFoodLogToggle","deleteFood","item","filter","renderFoods","map","class","onClick","onChange","handleDateChange","type","min","max","updateFoodsSelected","defaultValue","handleReactionChange","submitFoodLog","includes","filtered","handleMealChange","updatedMeal","newLog","dateKey","mealKey","foodSelectedKey","reactionKey","t","toString","allergyAlgorithm","oneDayBefore","Date","formatDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","findMatchingFoodLog","foods","updateReactions","forEach","updatedFood","hasOwnProperty","nestedFoodKey","parseInt","updatedNestedFoodKey","findFood","updatedNestedFoodValues","findFoodKey","updatedReaction","updatedFoodKey","newFoodReaction","updatedDate","_renderFoodLogs","Object","entries","i","id","displayFoodLogs","filterByFood","addToFoodFilter","resetFoodFilter","findMatches","matchedLogs","keys","key","index","some","r","matchedLog","push","renderMatchedLogs","div","renderAnalysis","reactionDescriptions","reactionDescriptionKeys","responseKey","singleDescription","href","onSubmit","this","Component","FoodLogs","Menu","ReactionLogs","Report","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3267a28c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../App.css\";\n\nexport default class Foods extends Component {\n\tstate = {\n\t\t// food state if part of the list for users\n\t\tfood: [],\n\n\t\t// log food is for the logged entries\n\t\tfoodLog: {},\n\n\t\t// toggle handlers\n\t\tdisplayFoods: false,\n\t\tdisplayLogs: false,\n\t\tdisplayLogByDateToggle: false,\n\t\tdisplayLogByFoodToggle: false,\n\t\tdisplayLogByReactionToggle: false,\n\t\tdisplayRenderAnalysisToggle: false,\n\t\t// onChange handlers for state\n\t\tdate: \"01-01-2021\",\n\t\tmeal: \"Breakfast\",\n\t\tfoodsSelected: [],\n\t\treaction: \"Dry Skin\",\n\n\t\t// used for when filtering food entries\n\t\tdateFilter: [],\n\t\treactionFilter: [],\n\t\tfoodFilter: [],\n\n\t\t// creating an object for matched logs\n\t\tlogs: null,\n\n\t\t// state for keeping track of reactions\n\t\treactions: {},\n\t\t// reactions > food > [ reaction_type ] > int value\n\t};\n\n\t// handle submit for food list\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(e);\n\t\tthis.setState({ food: [...this.state.food, this.state.input] });\n\t\tconsole.log(this.state);\n\t};\n\n\t// handle change for food input\n\thandleChange = (e) => {\n\t\tlet { name, value } = e.target;\n\t\tthis.setState({ [name]: value });\n\t\tconsole.log(this.state);\n\t};\n\n\t// toggle state for food list\n\tdisplayFoodsToggle = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tdisplayFoods: !prevState.displayFoods,\n\t\t}));\n\t};\n\n\t//toggle state for add food\n\tfoodLogToggle = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tfoodLog: !prevState.foodLog,\n\t\t}));\n\t};\n\n\t//toggle state for see food logs button\n\tdisplayFoodLogToggle = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tdisplayLogs: !prevState.displayLogs,\n\t\t}));\n\t};\n\n\t// toggle for filter by date button\n\tdisplayLogByDateToggle = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tdisplayLogByDateToggle: !prevState.displayLogByDateToggle,\n\t\t}));\n\t\tconsole.log(this.state.displayLogByDateToggle);\n\t};\n\n\t// toggle for filter by food button\n\tdisplayLogByFoodToggle = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tdisplayLogByFoodToggle: !prevState.displayLogByFoodToggle,\n\t\t}));\n\t\tconsole.log(this.state.displayLogByFoodToggle);\n\t};\n\n\t// toggle for filter by reaction button\n\tdisplayLogByReactionToggle = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tdisplayLogByReactionToggle: !prevState.displayLogByReactionToggle,\n\t\t}));\n\t\tconsole.log(this.state.displayLogByReactionToggle);\n\t};\n\n\t// toggle for render analysis by render analysis button\n\tdisplayRenderAnalysisToggle = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tdisplayRenderAnalysisToggle: !prevState.displayRenderAnalysisToggle,\n\t\t}));\n\t\tconsole.log(this.state.displayRenderAnalysisToggle);\n\t};\n\n\t// delete saved food\n\tdeleteFood = (item) => {\n\t\tthis.setState({\n\t\t\tfood: this.state.food.filter((e) => e !== item),\n\t\t});\n\t\tconsole.log(this.state);\n\t};\n\n\t// render food list after clicking food list button\n\trenderFoods = () => {\n\t\t// console.log(this.state.foodLog);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.food.map((item) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<button class=\"button\" onClick={() => this.deleteFood(item)}>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\t// log food display function\n\tfoodLog = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\t{/* <h3>Log Meal</h3> */}\n\t\t\t\t\t<br />\n\t\t\t\t\tDate <br />\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"datetime\"\n\t\t\t\t\t\tonChange={(value) => this.handleDateChange(value)}\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tmin=\"2020-01-01\"\n\t\t\t\t\t\tmax=\"2021-12-31\"\n\t\t\t\t\t></input>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t{/* Select Meal <br />\n\t\t\t\t\t<select\n\t\t\t\t\t\tclass=\"select-bar\"\n\t\t\t\t\t\tid=\"select-meal\"\n\t\t\t\t\t\tdefaultValue={this.state.meal}\n\t\t\t\t\t\tonChange={(value) => this.handleMealChange(value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"Breakfast\">Breakfast</option>\n\t\t\t\t\t\t<option value=\"Lunch\">Lunch</option>\n\t\t\t\t\t\t<option value=\"Dinner\">Dinner</option>\n\t\t\t\t\t\t<option name=\"meal\" value=\"Snack\">\n\t\t\t\t\t\t\tSnack\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br /> */}\n\t\t\t\t\tContained Which Foods?\n\t\t\t\t\t<br />\n\t\t\t\t\t{this.state.food.map((item) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tvalue={item}\n\t\t\t\t\t\t\t\t\tonChange={() => this.updateFoodsSelected(item)}\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<br />\n\t\t\t\t\tCurrent Skin Condition\n\t\t\t\t\t<br />\n\t\t\t\t\t<select\n\t\t\t\t\t\tclass=\"select-bar\"\n\t\t\t\t\t\tdefaultValue={this.state.reaction}\n\t\t\t\t\t\tonChange={(value) => this.handleReactionChange(value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"Dry Skin\">Dry Skin</option>\n\t\t\t\t\t\t<option value=\"Itching\">Itching</option>\n\t\t\t\t\t\t<option value=\"Red/brown patches\">Red/brown patches</option>\n\t\t\t\t\t\t<option value=\"Raised bumps\">Small, raised bumps</option>\n\t\t\t\t\t\t<option value=\"Small, raised bumps, leaking fluid\">\n\t\t\t\t\t\t\tSmall, raised bumps, leaking fluid\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"Thickened, cracked, scaly skin\">\n\t\t\t\t\t\t\tThickened, cracked, scaly skin\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"Raw, sensitive, swollen skin from scratching\">\n\t\t\t\t\t\t\tRaw, sensitive, swollen skin from scratching\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<br />\n\t\t\t\t\t<button class=\"button\" onClick={() => this.submitFoodLog()}>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\t// update foods selected, from radio button\n\tupdateFoodsSelected = (item) => {\n\t\tif (!this.state.foodsSelected.includes(item)) {\n\t\t\tthis.setState({ foodsSelected: [...this.state.foodsSelected, item] });\n\t\t} else {\n\t\t\tlet filtered = this.state.foodsSelected.filter((food) => food != item);\n\t\t\tthis.setState({ foodsSelected: filtered });\n\t\t}\n\t\tconsole.log(this.state.foodsSelected);\n\t};\n\n\t// select meal\n\thandleMealChange = (e) => {\n\t\tconsole.log(\"update meal\");\n\t\tconsole.log(e.target.value);\n\t\tconst updatedMeal = e.target.value;\n\t\tthis.setState({ meal: updatedMeal });\n\t\tconsole.log(this.state);\n\t};\n\n\t//submit food log\n\tsubmitFoodLog = () => {\n\t\t// console.log(\"submit food log\");\n\t\tconst date = this.state.date;\n\t\tconst meal = this.state.meal;\n\t\tconst foodsSelectedSubmission = this.state.foodsSelected;\n\t\tconst reaction = this.state.reaction;\n\t\tconst newLog = {\n\t\t\tdateKey: date,\n\t\t\tmealKey: meal,\n\t\t\tfoodSelectedKey: foodsSelectedSubmission,\n\t\t\treactionKey: reaction,\n\t\t};\n\n\t\t// this set state only preserves one object\n\t\tlet t = date.toString();\n\n\t\tthis.setState((prevState) => ({\n\t\t\tfoodLog: { ...prevState.foodLog, [t]: newLog },\n\t\t}));\n\n\t\tthis.allergyAlgorithm(t);\n\t\t// console.log(this.state.foodLog);\n\t};\n\n\tallergyAlgorithm = (t) => {\n\t\tlet date = new Date(t);\n\t\tlet oneDayBefore = date - 1;\n\t\toneDayBefore = new Date(oneDayBefore);\n\t\toneDayBefore = oneDayBefore.toString();\n\t\tthis.formatDate(oneDayBefore);\n\t};\n\n\tformatDate = (date) => {\n\t\t// const newReactionForDate-1/2 = {\n\t\t// take the date - 1/ 2\n\t\tvar d = new Date(date),\n\t\t\tmonth = \"\" + (d.getMonth() + 1),\n\t\t\tday = \"\" + d.getDate(),\n\t\t\tyear = d.getFullYear();\n\n\t\tif (month.length < 2) month = \"0\" + month;\n\t\tif (day.length < 2) day = \"0\" + day;\n\n\t\tlet oneDayBefore = [year, month, day].join(\"-\");\n\t\t// find key for that date in foodLog\n\t\tthis.findMatchingFoodLog(oneDayBefore);\n\t};\n\n\t// take food values\n\tfindMatchingFoodLog = (date) => {\n\t\t// console.log(date); // date that is two days before logged input\n\t\tif (this.state.foodLog[date]) {\n\t\t\t// returns food values from matching date\n\t\t\tlet foods = this.state.foodLog[date].foodSelectedKey;\n\t\t\tlet reaction = this.state.foodLog[date].reactionKey;\n\t\t\t// console.log(foods);\n\t\t\tthis.updateReactions(foods, reaction);\n\t\t} else {\n\t\t\tconsole.log(\"no match\");\n\t\t}\n\t};\n\n\tupdateReactions = (foods, reaction) => {\n\t\tfoods.forEach((updatedFood) => {\n\t\t\t// this if statement checks if the reaction has the updatedFood\n\t\t\tif (this.state.reactions.hasOwnProperty(updatedFood)) {\n\t\t\t\tlet nestedFoodKey = { ...this.state.reactions[updatedFood] };\n\t\t\t\t// checks that particular reaction is in the updatedFood object\n\t\t\t\t// TO DO:\n\t\t\t\tif (nestedFoodKey.hasOwnProperty(reaction)) {\n\t\t\t\t\tconsole.log(\"part 1 of updatedReactions\");\n\t\t\t\t\tlet value = parseInt(this.state.reactions[updatedFood][reaction] + 1);\n\t\t\t\t\tconsole.log(nestedFoodKey, value);\n\t\t\t\t\tlet updatedNestedFoodKey = { [reaction]: value };\n\t\t\t\t\tlet findFood = this.state.reactions[updatedFood];\n\t\t\t\t\tlet updatedNestedFoodValues = {\n\t\t\t\t\t\t...findFood,\n\t\t\t\t\t\t...updatedNestedFoodKey,\n\t\t\t\t\t};\n\t\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\t\treactions: {\n\t\t\t\t\t\t\t...prevState.reactions,\n\t\t\t\t\t\t\t[updatedFood]: {\n\t\t\t\t\t\t\t\t...prevState.reactions.updatedFood,\n\t\t\t\t\t\t\t\t...updatedNestedFoodValues, // REPLACE WITH X\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}));\n\t\t\t\t\tconsole.log(this.state.reactions);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"part 2A of function\");\n\t\t\t\t\t// has the food key but not the reaction key\n\t\t\t\t\tconsole.log(\"no reaction key\");\n\t\t\t\t\t// create an object with that reaction key and set it to one\n\t\t\t\t\tlet findFoodKey = { ...this.state.reactions[updatedFood] };\n\t\t\t\t\tlet updatedReaction = { [reaction]: 1 };\n\t\t\t\t\tlet updatedFoodKey = { ...findFoodKey, ...updatedReaction };\n\t\t\t\t\tconsole.log(\"updated food key\", updatedFoodKey);\n\n\t\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\t\treactions: {\n\t\t\t\t\t\t\t...prevState.reactions,\n\t\t\t\t\t\t\t[updatedFood]: {\n\t\t\t\t\t\t\t\t...prevState.reactions.updatedFood,\n\t\t\t\t\t\t\t\t...updatedFoodKey,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log(updatedFood, \"not in reactions\");\n\t\t\t\t// create an object, [ food ] : { [ reaction ] : 1 }\n\t\t\t\tlet newFoodReaction = { [updatedFood]: { [reaction]: 1 } };\n\t\t\t\t// set state for for reactions\n\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\treactions: { ...prevState.reactions, ...newFoodReaction },\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t};\n\n\t// after the updateReactions function, the values should be update to\n\t// { food: {reaction1 : 1}, { reaction2 : 2 }, { reaction3 : 3 }, etc }\n\t// when rendering which foods are triggers\n\t// go through reactions list, find foods that have high values and return them\n\n\t//handle date change\n\thandleDateChange = (e) => {\n\t\t// console.log(\"handle date change\");\n\t\tconst updatedDate = e.target.value;\n\t\tthis.setState({ date: updatedDate });\n\t};\n\n\t//handle reaction change\n\thandleReactionChange = (e) => {\n\t\tconsole.log(\"update reaction\");\n\t\tconsole.log(e.target.value);\n\t\tconst updatedReaction = e.target.value;\n\t\tthis.setState({ reaction: updatedReaction });\n\t\tconsole.log(this.state);\n\t};\n\n\t// displayFoodLogs helper function\n\t_renderFoodLogs = (foodLog) => {\n\t\treturn Object.entries(foodLog).map(([key, value], i) => {\n\t\t\treturn (\n\t\t\t\t<div id=\"individual-food-log-div\">\n\t\t\t\t\tDate: {value.dateKey}\n\t\t\t\t\t<br />\n\t\t\t\t\t{value.mealKey}\n\t\t\t\t\t<br />\n\t\t\t\t\tFoods: {value.foodSelectedKey}\n\t\t\t\t\t<br />\n\t\t\t\t\tReaction: {value.reactionKey}\n\t\t\t\t\t<br />\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\t// display food logs\n\tdisplayFoodLogs = () => {\n\t\tconsole.log(\"display food logs\");\n\t\tconst foodLog = this.state.foodLog;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>{this._renderFoodLogs(foodLog)}</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\tfilterByFood = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.food.map((item) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<button onClick={() => this.addToFoodFilter(item)}>\n\t\t\t\t\t\t\t\t\tSelect\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\n\taddToFoodFilter = (item) => {\n\t\tif (!this.state.foodFilter.includes(item)) {\n\t\t\tthis.setState({ foodFilter: [...this.state.foodFilter, item] });\n\t\t}\n\t\tconsole.log(this.state.foodFilter);\n\t};\n\n\tresetFoodFilter = () => {\n\t\tthis.setState({ foodFilter: [] });\n\t\tconsole.log(this.state.foodFilter);\n\t};\n\n\tfindMatches = () => {\n\t\tconst foodLog = this.state.foodLog;\n\t\tconst foodFilter = this.state.foodFilter;\n\t\tconsole.log(\"food filter\", foodFilter);\n\n\t\tconst matchedLogs = [];\n\t\tObject.keys(foodLog).forEach((key, index) => {\n\t\t\tif (foodLog[key].foodSelectedKey.some((r) => foodFilter.includes(r))) {\n\t\t\t\tconst matchedLog = foodLog[key];\n\t\t\t\t// this returns the div element from renderMatchedLogs\n\t\t\t\tmatchedLogs.push(this.renderMatchedLogs(matchedLog));\n\t\t\t} else {\n\t\t\t\t// do nothing\n\t\t\t}\n\n\t\t\tconst logs = <>{matchedLogs.map((div) => div)}</>;\n\n\t\t\tthis.setState({ logs });\n\t\t});\n\t};\n\n\trenderMatchedLogs = (matchedLog) => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{matchedLog.dateKey}\n\t\t\t\t<br />\n\t\t\t\t{matchedLog.mealKey}\n\t\t\t\t<br />\n\t\t\t\t{matchedLog.foodSelectedKey}\n\t\t\t\t<br />\n\t\t\t\t{matchedLog.reactionKey}\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderAnalysis = () => {\n\t\tlet reactions = this.state.reactions;\n\t\tlet foods = Object.keys(reactions);\n\t\treturn foods.map((food) => {\n\t\t\tlet reactionDescriptions = reactions[food];\n\t\t\tlet reactionDescriptionKeys = Object.keys(reactionDescriptions);\n\t\t\tconsole.log(\n\t\t\t\t\"reaction descriptions \",\n\t\t\t\treactionDescriptions,\n\t\t\t\t\"keys: \",\n\t\t\t\treactionDescriptionKeys\n\t\t\t);\n\t\t\tlet responseKey = Object.keys(reactionDescriptions);\n\t\t\tconsole.log(\"response keys: \", responseKey);\n\n\t\t\t// RUNS THROUGH RESPONSE KEYS TO RENDER VALUES\n\t\t\treturn responseKey.map((singleDescription) => {\n\t\t\t\tlet value = reactionDescriptions[singleDescription];\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"food is \",\n\t\t\t\t\tfood,\n\t\t\t\t\t\"description is \",\n\t\t\t\t\tsingleDescription,\n\t\t\t\t\t\"value is\",\n\t\t\t\t\tvalue\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\tsingleDescription == \"Thickened, cracked, scaly skin\" &&\n\t\t\t\t\tvalue > 3\n\t\t\t\t) {\n\t\t\t\t\treturn <div>Possible Severe Allergen: {food}</div>;\n\t\t\t\t}\n\n\t\t\t\tif (singleDescription == \"Itching\" && value > 3) {\n\t\t\t\t\treturn <div>Possible Moderate Allergen: {food}</div>;\n\t\t\t\t}\n\n\t\t\t\tif (singleDescription == \"Dry Skin\" && value > 3) {\n\t\t\t\t\treturn <div>Possible Slight Allergen: {food}</div>;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\t// renderFoodData(foodName, description, value) {\n\t// \tconsole.log(foodName, description, value);\n\n\t// \treturn <div> {(foodName, description, value)} </div>;\n\t// }\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h3>Food Sensitivity Tracker & Analysis</h3>\n\t\t\t\t<div class=\"sidenav\">\n\t\t\t\t\t<a href=\"#\">About</a>\n\t\t\t\t\t<a href=\"#\">Services</a>\n\t\t\t\t\t<a href=\"#\">Clients</a>\n\t\t\t\t\t<a href=\"#\">Contact</a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"outerdiv\">\n\t\t\t\t\t<div class=\"card\" id=\"leftbox\">\n\t\t\t\t\t\t<form onSubmit={(e) => this.handleSubmit(e)}>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<button class=\"button\" id=\"big-button\">\n\t\t\t\t\t\t\t\t\tAdd Food to Track\n\t\t\t\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tCommon Eczema Triggers:\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tclass=\"select-bar\"\n\t\t\t\t\t\t\t\t\tid=\"food-bar\"\n\t\t\t\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"Citrus Fruits\">Citrus Fruits</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Dairy\">Dairy</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Eggs\">Eggs</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Fish\">Fish</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Gluten or Wheat\">Gluten or Wheat</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Soy\">Soy</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Spices\">\n\t\t\t\t\t\t\t\t\t\tSpices (Vanilla, Cloves, Cinnamon)\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Shellfish\">Shellfish</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Tomatoes\">Tomatoes</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\" class=\"button\" />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tInclude Custom Food:\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"custom-food-input\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"input\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\" class=\"button\" />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"button\"\n\t\t\t\t\t\t\tid=\"big-button\"\n\t\t\t\t\t\t\tonClick={this.displayFoodsToggle}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSee Food List\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{this.state.displayFoods ? this.renderFoods() : null}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"card\" id=\"middlebox\">\n\t\t\t\t\t\t<button class=\"button\" id=\"big-button\" onClick={this.foodLogToggle}>\n\t\t\t\t\t\t\tCreate an Entry\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{this.state.foodLog ? this.foodLog() : null}\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"card\" id=\"rightbox\">\n\t\t\t\t\t\t{/* toggle for see foods  */}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"button\"\n\t\t\t\t\t\t\tid=\"big-button\"\n\t\t\t\t\t\t\tonClick={this.displayFoodLogToggle}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSee Food Logs\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div>{this.state.displayLogs ? this.displayFoodLogs() : null}</div>\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{/* toggle to filter by food  */}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button class=\"button\" onClick={this.displayLogByFoodToggle}>\n\t\t\t\t\t\t\t\tFilter by Food\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button class=\"button\" onClick={this.resetFoodFilter}>\n\t\t\t\t\t\t\tReset Filter\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button class=\"button\" onClick={this.findMatches}>\n\t\t\t\t\t\t\t\tFind Matches\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{this.state.logs}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.state.displayLogByFoodToggle ? this.filterByFood() : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{/* toggle to filter by reaction  */}\n\t\t\t\t\t\t{/* <button onClick={this.displayLogByReactionToggle}>\n\t\t\t\t\t\t\tFilter by Reaction\n\t\t\t\t\t\t</button> */}\n\n\t\t\t\t\t\t{/* toggle to filter by date */}\n\t\t\t\t\t\t{/* <button onClick={this.displayLogByDateToggle}>\n\t\t\t\t\t\t\tFilter by Date\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<br /> */}\n\t\t\t\t\t\t{/* <div>{this.state.displayLogByDateToggle ? this.filterByDate() : null}</div> */}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div id=\"bottom-div\">\n\t\t\t\t\t\t\t<b> Food Sensitivity </b>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass=\"button\"\n\t\t\t\t\t\t\t\t\tid=\"big-button\"\n\t\t\t\t\t\t\t\t\tonClick={this.displayRenderAnalysisToggle}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tShow Analysis and Results\n\t\t\t\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t{this.state.displayRenderAnalysisToggle\n\t\t\t\t\t\t\t\t\t? this.renderAnalysis()\n\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"bottom-right-div\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t<b> My Profile </b>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br /> Name <br /> Age <br /> Known Allergies\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\n\nexport default class FoodLogs extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1>Food Logs Page</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Log Meal</h3>\n\t\t\t\t\t<br />\n\t\t\t\t\tDate: Today\n\t\t\t\t\t<br />\n\t\t\t\t\t<select name=\"\" id=\"\">\n\t\t\t\t\t\t<option value=\"breakfast\">Breakfast</option>\n\t\t\t\t\t\t<option value=\"lunch\">Lunch</option>\n\t\t\t\t\t\t<option value=\"dinner\">Dinner</option>\n\t\t\t\t\t\t<option value=\"snack\">Snack</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<br />\n\t\t\t\t\tContained which foods?\n\t\t\t\t\t<br />\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Link, NavLink } from \"react-router-dom\";\n\nexport default class Menu extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Menu Page</h1>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\n\nexport default class ReactionLogs extends Component {\n\trender() {\n\t\treturn <h1>ReactionLogs Page</h1>;\n\t}\n}\n","import React, { Component } from \"react\";\n\nexport default class Report extends Component {\n\trender() {\n\t\treturn <h1>Reports Page</h1>;\n\t}\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Link, NavLink } from \"react-router-dom\";\nimport Foods from \"./pages/Foods\";\nimport FoodLogs from \"./pages/FoodLogs\";\nimport Menu from \"./pages/Menu\";\nimport ReactionLogs from \"./pages/ReactionLogs\";\nimport Report from \"./pages/Report\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst Header = () => (\n\t<BrowserRouter>\n\t\t<header>\n\t\t\t<h1>Elimination Diet</h1> <br />\n\t\t\t<NavLink to=\"/\">Menu</NavLink>\n\t\t\t<br />\n\t\t\t<NavLink to=\"/foods\">Foods</NavLink>\n\t\t\t<br />\n\t\t\t<NavLink to=\"/foodlogs\">Food Logs</NavLink>\n\t\t\t<br />\n\t\t\t<NavLink to=\"/reactionlogs\">Reaction Logs</NavLink>\n\t\t\t<br />\n\t\t\t<NavLink to=\"/report\">Report</NavLink>\n\t\t</header>\n\t</BrowserRouter>\n);\n\nexport default class App extends Component {\n\tstate = {\n\t\tfoods: [],\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/* <Header /> */}\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<main id=\"page-wrap\">\n\t\t\t\t\t\t\t<Route exact path=\"/menu\" component={Menu} />\n\t\t\t\t\t\t\t<Route exact path=\"/foods\" component={Foods} />\n\t\t\t\t\t\t\t<Route exact path=\"/foodlogs\" component={FoodLogs} />\n\t\t\t\t\t\t\t<Route exact path=\"/reactionlogs\" component={ReactionLogs} />\n\t\t\t\t\t\t\t<Route exact path=\"/report\" component={Report} />\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</Switch>\n\t\t\t\t</BrowserRouter>\n\t\t\t</>\n\t\t);\n\t}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}